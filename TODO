TODO list

General:
  ✔ Rename from RodoFareSim to RodoTollSim @done (13-08-07)
  ✔ Organize unit tests and binaries @done (13-07-31)

Main implementation:
  ✔ Definitions: @done (13-07-26)
    ✔ Network @done (13-07-26)
    ✔ O/D survey @done (13-07-26)
  ☐ Shortest paths:
    ✔ Basic: Bellman-Ford @done (13-07-26)
    ☐ Bellman-Ford optimization:
      ☐ Early exit
      ☐ Full optimization @comment (implement an actual queue of arcs yet to be relaxed)
    ☐ Improved/faster: Dijkstra @comment (really only depends on a good D-ary heap)
    ☐ Are there any heuristics that can be used? @comment (it's hard to find a valid estimate function for A*)
  ☐ General structures, algorithms and formats:
    ✔ CSV input @comment (port/optimize from jonasmalacofilho/jonas-haxe) @done (13-08-05)
    ☐ D-ary heap @comment (port/optimize from jonasmalacofilho/jonas-haxe)
    ☐ R-Tree (RjTree and Sqlite R-Tree) @comment (port/optimize from jonasmalacofilho/jonas-haxe)
  ✔ Generic Elebeta Text Table (ETT) @done (13-08-07)
  ☐ Network formats:
    ☐ Node
    ☐ Link
  ☐ O/D survey data format
  ☐ Simulator application:
    ☐ Settings
    ☐ Input
    ☐ Run
    ☐ Output
  ☐ Volume output mode assignment

Additional (optional) improvements:
  ☐ Compute error estimes during the assignments
  ☐ Compute debug/auxiliary graphs during the assignments
  ☐ Build maps of the network and/or of the assignment volumes during/after the assignments

Unit testing:
  ✔ Digraph construction @done (13-07-29)
  ✔ Bellman-Ford shortest paths @comment (the fold function can be used for this) @done (13-07-30)
  ✔ Volume output assignment @comment (the fold function can be used for this) @done (13-07-30)

Performance testing:
  ☐ Bellman-Ford performance with full network and all O/D surveys

Production testing:
  ☐ Full O/D assignment:
    ☐ Dist costs only
    ☐ Time costs only
    ☐ Dist+time costs
